name: Build, test, and deploy webserver
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, test and deploy to GitHub Container registry
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          # Install a specific version of uv.
          version: "0.5.18"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run linters, checks and tests
        run: |
          uv run poe release
        env:
          CONFIG: production
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          DB_NAME: test
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          USERS_HOST_SERVER: localhost
          USERS_HOST_PORT: 8083
          COMPETITION_FORMAT_HOST_SERVER: localhost
          COMPETITION_FORMAT_HOST_PORT: 8082
          EVENT_HOST_SERVER: localhost
          EVENT_HOST_PORT: 8081

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag and publish docker image to Github Container registry
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |-
          docker tag ghcr.io/langrenn-sprint/race-service:test ghcr.io/langrenn-sprint/race-service:latest
          docker rmi ghcr.io/langrenn-sprint/race-service:test
          docker push ghcr.io/langrenn-sprint/race-service:latest
