[tool.poetry]
authors = ["Stig B. Dørmænen <stigbd@gmail.com>", "Heming Harnæs <heming.harnaes@gmail.com"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
]
description = "An API for admin of sporting events"
homepage = "https://github.com/langrenn-sprint/race-service"
license = "Apache-2.0"
name = "race-service"
readme = "README.md"
repository = "https://github.com/langrenn-sprint/race-service"
version = "0.1.0"

[tool.poetry.dependencies]
PyJWT = "^2.1.0"
aiodns = "^3.0.0"
aiohttp = "^3.7.2"
aiohttp-middlewares = "^2.1.0"
cchardet = "^2.1.7"
certifi = "^2022.6.15.2"
dataclasses-json = "^0.5.5"
gunicorn = "^20.0.4"
marshmallow = "^3.13.0"
motor = "^3.0.0"
multidict = "^6.0.1"
python = ">=3.8.1,<3.11"
python-dotenv = "^0.21.0"
python-json-logger = "^2.0.2"

[tool.poetry.group.dev.dependencies]

Pygments = "^2.10.0"
aiohttp-devtools = "^1.0.post0"
aioresponses = "^0.7.2"
black = "^23.1.0"
codecov = "^2.1.10"
coverage = "^7.1.0"
docker = "^6.0.0"
docker-compose = "^1.29.2"
flake8 = "^6.0.0"
flake8-annotations = "^3.0.0"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^23.2.13"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
mypy = "^1.0.0"
nox = "^2022.8.7"
nox-poetry = "^1.0.1"
pep8-naming = "^0.13.2"
pytest = "^7.1.3"
pytest-aiohttp = "^1.0.4"
pytest-asyncio = "^0.20.1"
pytest-cov = "^4.0.0"
pytest-docker = "^1.0.1"
pytest-mock = "^3.8.2"
requests = "^2.25.1"
safety = "^2.1.1"

[tool.coverage.paths]
source = ["race_service", "*/site-packages"]

[tool.coverage.run]
branch = false
omit = [
  "*gunicorn_config.py",
]
source = ["race_service"]

[tool.coverage.report]
fail_under = 100
show_missing = true

[tool.mypy]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = false
warn_unreachable = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "gunicorn.*",
  "requests.*",
  "motor.*",
  "pytest_mock",
  "aioresponses.*",
  "pythonjsonlogger.*",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
  "unit: marks tests as unit (fast)",
  "integration: marks tests as integration (slower)",
  "contract: marks test as contract (slow)",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
